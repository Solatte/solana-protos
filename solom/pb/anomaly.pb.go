// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: anomaly.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SolBalance  *SubscribeRequestFilterSolBalance        `protobuf:"bytes,1,opt,name=sol_balance,json=solBalance,proto3" json:"sol_balance,omitempty"`
	Pumpfun     *SubscribeRequestFilterPumpFun           `protobuf:"bytes,2,opt,name=pumpfun,proto3" json:"pumpfun,omitempty"`
	Transaction *SubscribeRequestFilterTransactionFilter `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Source      *string                                  `protobuf:"bytes,4,opt,name=source,proto3,oneof" json:"source,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetSolBalance() *SubscribeRequestFilterSolBalance {
	if x != nil {
		return x.SolBalance
	}
	return nil
}

func (x *SubscribeRequest) GetPumpfun() *SubscribeRequestFilterPumpFun {
	if x != nil {
		return x.Pumpfun
	}
	return nil
}

func (x *SubscribeRequest) GetTransaction() *SubscribeRequestFilterTransactionFilter {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SubscribeRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type SubscribeRequestFilterSolBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min *uint64 `protobuf:"varint,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max *uint64 `protobuf:"varint,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *SubscribeRequestFilterSolBalance) Reset() {
	*x = SubscribeRequestFilterSolBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterSolBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterSolBalance) ProtoMessage() {}

func (x *SubscribeRequestFilterSolBalance) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterSolBalance.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterSolBalance) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequestFilterSolBalance) GetMin() uint64 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *SubscribeRequestFilterSolBalance) GetMax() uint64 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type SubscribeRequestFilterPumpFun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPumpfun *bool `protobuf:"varint,1,opt,name=is_pumpfun,json=isPumpfun,proto3,oneof" json:"is_pumpfun,omitempty"`
}

func (x *SubscribeRequestFilterPumpFun) Reset() {
	*x = SubscribeRequestFilterPumpFun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterPumpFun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterPumpFun) ProtoMessage() {}

func (x *SubscribeRequestFilterPumpFun) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterPumpFun.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterPumpFun) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeRequestFilterPumpFun) GetIsPumpfun() bool {
	if x != nil && x.IsPumpfun != nil {
		return *x.IsPumpfun
	}
	return false
}

type SubscribeRequestFilterTransactionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint   []string `protobuf:"bytes,1,rep,name=mint,proto3" json:"mint,omitempty"`
	Signer []string `protobuf:"bytes,2,rep,name=signer,proto3" json:"signer,omitempty"`
	Min    *uint64  `protobuf:"varint,3,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max    *uint64  `protobuf:"varint,4,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *SubscribeRequestFilterTransactionFilter) Reset() {
	*x = SubscribeRequestFilterTransactionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterTransactionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterTransactionFilter) ProtoMessage() {}

func (x *SubscribeRequestFilterTransactionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterTransactionFilter.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterTransactionFilter) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeRequestFilterTransactionFilter) GetMint() []string {
	if x != nil {
		return x.Mint
	}
	return nil
}

func (x *SubscribeRequestFilterTransactionFilter) GetSigner() []string {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *SubscribeRequestFilterTransactionFilter) GetMin() uint64 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *SubscribeRequestFilterTransactionFilter) GetMax() uint64 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type SubscribeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source         string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	AmmId          string `protobuf:"bytes,2,opt,name=amm_id,json=ammId,proto3" json:"amm_id,omitempty"`
	Mint           string `protobuf:"bytes,3,opt,name=mint,proto3" json:"mint,omitempty"`
	Signature      string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	LpBalanceInSol uint64 `protobuf:"varint,5,opt,name=lp_balance_in_sol,json=lpBalanceInSol,proto3" json:"lp_balance_in_sol,omitempty"`
}

func (x *SubscribeUpdate) Reset() {
	*x = SubscribeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdate) ProtoMessage() {}

func (x *SubscribeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdate.ProtoReflect.Descriptor instead.
func (*SubscribeUpdate) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeUpdate) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SubscribeUpdate) GetAmmId() string {
	if x != nil {
		return x.AmmId
	}
	return ""
}

func (x *SubscribeUpdate) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *SubscribeUpdate) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SubscribeUpdate) GetLpBalanceInSol() uint64 {
	if x != nil {
		return x.LpBalanceInSol
	}
	return 0
}

type SubscribeEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *string `protobuf:"bytes,1,opt,name=source,proto3,oneof" json:"source,omitempty"`
}

func (x *SubscribeEventRequest) Reset() {
	*x = SubscribeEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEventRequest) ProtoMessage() {}

func (x *SubscribeEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEventRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEventRequest) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeEventRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type SubscribeEventUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source    string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	AmmId     string `protobuf:"bytes,2,opt,name=amm_id,json=ammId,proto3" json:"amm_id,omitempty"`
	Mint      string `protobuf:"bytes,3,opt,name=mint,proto3" json:"mint,omitempty"`
	Signature string `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Event     string `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SubscribeEventUpdate) Reset() {
	*x = SubscribeEventUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEventUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEventUpdate) ProtoMessage() {}

func (x *SubscribeEventUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEventUpdate.ProtoReflect.Descriptor instead.
func (*SubscribeEventUpdate) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeEventUpdate) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SubscribeEventUpdate) GetAmmId() string {
	if x != nil {
		return x.AmmId
	}
	return ""
}

func (x *SubscribeEventUpdate) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *SubscribeEventUpdate) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SubscribeEventUpdate) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

type AmmId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmmId string `protobuf:"bytes,1,opt,name=amm_id,json=ammId,proto3" json:"amm_id,omitempty"`
}

func (x *AmmId) Reset() {
	*x = AmmId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmmId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmmId) ProtoMessage() {}

func (x *AmmId) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmmId.ProtoReflect.Descriptor instead.
func (*AmmId) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{7}
}

func (x *AmmId) GetAmmId() string {
	if x != nil {
		return x.AmmId
	}
	return ""
}

type Mint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *Mint) Reset() {
	*x = Mint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mint) ProtoMessage() {}

func (x *Mint) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mint.ProtoReflect.Descriptor instead.
func (*Mint) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{8}
}

func (x *Mint) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{9}
}

func (x *Boolean) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type PriceAllWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price map[int32]float64 `protobuf:"bytes,1,rep,name=price,proto3" json:"price,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *PriceAllWindow) Reset() {
	*x = PriceAllWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceAllWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceAllWindow) ProtoMessage() {}

func (x *PriceAllWindow) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceAllWindow.ProtoReflect.Descriptor instead.
func (*PriceAllWindow) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{10}
}

func (x *PriceAllWindow) GetPrice() map[int32]float64 {
	if x != nil {
		return x.Price
	}
	return nil
}

type GetOneMinuteVolumeByWindowArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint     string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GetOneMinuteVolumeByWindowArgs) Reset() {
	*x = GetOneMinuteVolumeByWindowArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneMinuteVolumeByWindowArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneMinuteVolumeByWindowArgs) ProtoMessage() {}

func (x *GetOneMinuteVolumeByWindowArgs) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneMinuteVolumeByWindowArgs.ProtoReflect.Descriptor instead.
func (*GetOneMinuteVolumeByWindowArgs) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{11}
}

func (x *GetOneMinuteVolumeByWindowArgs) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *GetOneMinuteVolumeByWindowArgs) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ActionMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume map[string]int64 `protobuf:"bytes,1,rep,name=volume,proto3" json:"volume,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ActionMap) Reset() {
	*x = ActionMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionMap) ProtoMessage() {}

func (x *ActionMap) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionMap.ProtoReflect.Descriptor instead.
func (*ActionMap) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{12}
}

func (x *ActionMap) GetVolume() map[string]int64 {
	if x != nil {
		return x.Volume
	}
	return nil
}

type OneMinuteVolumeByWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume map[int32]*ActionMap `protobuf:"bytes,1,rep,name=volume,proto3" json:"volume,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OneMinuteVolumeByWindow) Reset() {
	*x = OneMinuteVolumeByWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneMinuteVolumeByWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneMinuteVolumeByWindow) ProtoMessage() {}

func (x *OneMinuteVolumeByWindow) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneMinuteVolumeByWindow.ProtoReflect.Descriptor instead.
func (*OneMinuteVolumeByWindow) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{13}
}

func (x *OneMinuteVolumeByWindow) GetVolume() map[int32]*ActionMap {
	if x != nil {
		return x.Volume
	}
	return nil
}

type GetOHLCPriceAllWindowArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint     string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GetOHLCPriceAllWindowArgs) Reset() {
	*x = GetOHLCPriceAllWindowArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOHLCPriceAllWindowArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOHLCPriceAllWindowArgs) ProtoMessage() {}

func (x *GetOHLCPriceAllWindowArgs) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOHLCPriceAllWindowArgs.ProtoReflect.Descriptor instead.
func (*GetOHLCPriceAllWindowArgs) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{14}
}

func (x *GetOHLCPriceAllWindowArgs) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *GetOHLCPriceAllWindowArgs) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type OHLCPriceAllWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price map[int64]*OHLC `protobuf:"bytes,1,rep,name=price,proto3" json:"price,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OHLCPriceAllWindow) Reset() {
	*x = OHLCPriceAllWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OHLCPriceAllWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OHLCPriceAllWindow) ProtoMessage() {}

func (x *OHLCPriceAllWindow) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OHLCPriceAllWindow.ProtoReflect.Descriptor instead.
func (*OHLCPriceAllWindow) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{15}
}

func (x *OHLCPriceAllWindow) GetPrice() map[int64]*OHLC {
	if x != nil {
		return x.Price
	}
	return nil
}

type OHLC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open  float64 `protobuf:"fixed64,1,opt,name=open,proto3" json:"open,omitempty"`
	High  float64 `protobuf:"fixed64,2,opt,name=high,proto3" json:"high,omitempty"`
	Low   float64 `protobuf:"fixed64,3,opt,name=low,proto3" json:"low,omitempty"`
	Close float64 `protobuf:"fixed64,4,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *OHLC) Reset() {
	*x = OHLC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OHLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OHLC) ProtoMessage() {}

func (x *OHLC) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OHLC.ProtoReflect.Descriptor instead.
func (*OHLC) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{16}
}

func (x *OHLC) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *OHLC) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *OHLC) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *OHLC) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

type IsAmmGoodArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeRange []string `protobuf:"bytes,1,rep,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	Action    string   `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Operator  string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Value     int64    `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	AmmId     string   `protobuf:"bytes,5,opt,name=amm_id,json=ammId,proto3" json:"amm_id,omitempty"`
}

func (x *IsAmmGoodArgs) Reset() {
	*x = IsAmmGoodArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAmmGoodArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAmmGoodArgs) ProtoMessage() {}

func (x *IsAmmGoodArgs) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAmmGoodArgs.ProtoReflect.Descriptor instead.
func (*IsAmmGoodArgs) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{17}
}

func (x *IsAmmGoodArgs) GetTimeRange() []string {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *IsAmmGoodArgs) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *IsAmmGoodArgs) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *IsAmmGoodArgs) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *IsAmmGoodArgs) GetAmmId() string {
	if x != nil {
		return x.AmmId
	}
	return ""
}

type GetTokenByArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Count     int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetTokenByArgs) Reset() {
	*x = GetTokenByArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenByArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByArgs) ProtoMessage() {}

func (x *GetTokenByArgs) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByArgs.ProtoReflect.Descriptor instead.
func (*GetTokenByArgs) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{18}
}

func (x *GetTokenByArgs) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetTokenByArgs) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetTokenByArgs) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TokenBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []string `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenBy) Reset() {
	*x = TokenBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBy) ProtoMessage() {}

func (x *TokenBy) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBy.ProtoReflect.Descriptor instead.
func (*TokenBy) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{19}
}

func (x *TokenBy) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetWhaleCountByWindowArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint     string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Min      int64  `protobuf:"varint,3,opt,name=min,proto3" json:"min,omitempty"`
	Max      int64  `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *GetWhaleCountByWindowArgs) Reset() {
	*x = GetWhaleCountByWindowArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWhaleCountByWindowArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWhaleCountByWindowArgs) ProtoMessage() {}

func (x *GetWhaleCountByWindowArgs) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWhaleCountByWindowArgs.ProtoReflect.Descriptor instead.
func (*GetWhaleCountByWindowArgs) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{20}
}

func (x *GetWhaleCountByWindowArgs) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *GetWhaleCountByWindowArgs) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *GetWhaleCountByWindowArgs) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *GetWhaleCountByWindowArgs) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type CountMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]int64 `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CountMap) Reset() {
	*x = CountMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMap) ProtoMessage() {}

func (x *CountMap) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMap.ProtoReflect.Descriptor instead.
func (*CountMap) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{21}
}

func (x *CountMap) GetValue() map[string]int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type WhaleCountByWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count map[int32]*CountMap `protobuf:"bytes,1,rep,name=count,proto3" json:"count,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WhaleCountByWindow) Reset() {
	*x = WhaleCountByWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhaleCountByWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhaleCountByWindow) ProtoMessage() {}

func (x *WhaleCountByWindow) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhaleCountByWindow.ProtoReflect.Descriptor instead.
func (*WhaleCountByWindow) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{22}
}

func (x *WhaleCountByWindow) GetCount() map[int32]*CountMap {
	if x != nil {
		return x.Count
	}
	return nil
}

type GetOneMinuteTradeSizeByWindowArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint     string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GetOneMinuteTradeSizeByWindowArgs) Reset() {
	*x = GetOneMinuteTradeSizeByWindowArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneMinuteTradeSizeByWindowArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneMinuteTradeSizeByWindowArgs) ProtoMessage() {}

func (x *GetOneMinuteTradeSizeByWindowArgs) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneMinuteTradeSizeByWindowArgs.ProtoReflect.Descriptor instead.
func (*GetOneMinuteTradeSizeByWindowArgs) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{23}
}

func (x *GetOneMinuteTradeSizeByWindowArgs) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *GetOneMinuteTradeSizeByWindowArgs) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SizeMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]int64 `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SizeMap) Reset() {
	*x = SizeMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SizeMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeMap) ProtoMessage() {}

func (x *SizeMap) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeMap.ProtoReflect.Descriptor instead.
func (*SizeMap) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{24}
}

func (x *SizeMap) GetValue() map[string]int64 {
	if x != nil {
		return x.Value
	}
	return nil
}

type OneMinuteTradeSizeByWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size map[int32]*SizeMap `protobuf:"bytes,1,rep,name=size,proto3" json:"size,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OneMinuteTradeSizeByWindow) Reset() {
	*x = OneMinuteTradeSizeByWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_anomaly_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneMinuteTradeSizeByWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneMinuteTradeSizeByWindow) ProtoMessage() {}

func (x *OneMinuteTradeSizeByWindow) ProtoReflect() protoreflect.Message {
	mi := &file_anomaly_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneMinuteTradeSizeByWindow.ProtoReflect.Descriptor instead.
func (*OneMinuteTradeSizeByWindow) Descriptor() ([]byte, []int) {
	return file_anomaly_proto_rawDescGZIP(), []int{25}
}

func (x *OneMinuteTradeSizeByWindow) GetSize() map[int32]*SizeMap {
	if x != nil {
		return x.Size
	}
	return nil
}

var File_anomaly_proto protoreflect.FileDescriptor

var file_anomaly_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x22, 0x96, 0x02, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x0b, 0x73,
	0x6f, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x6c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x75, 0x6d, 0x70, 0x66, 0x75, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x52, 0x07, 0x70, 0x75,
	0x6d, 0x70, 0x66, 0x75, 0x6e, 0x12, 0x50, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x60, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61,
	0x78, 0x22, 0x52, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x75, 0x6d, 0x70, 0x46,
	0x75, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x6d, 0x70, 0x66, 0x75, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x69, 0x73, 0x50, 0x75, 0x6d, 0x70,
	0x66, 0x75, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x75,
	0x6d, 0x70, 0x66, 0x75, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x27, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x15, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0x9d, 0x01, 0x0a, 0x0f,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6d, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6d, 0x6d, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x29, 0x0a, 0x11, 0x6c, 0x70, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x5f, 0x73, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6c, 0x70, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x53, 0x6f, 0x6c, 0x22, 0x3f, 0x0a, 0x15, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x6d, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6d, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x05,
	0x41, 0x6d, 0x6d, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6d, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6d, 0x6d, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x04,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x36, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x7c, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x34, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaa,
	0x01, 0x0a, 0x17, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x42, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0x4b,
	0x0a, 0x0b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4f, 0x48, 0x4c, 0x43, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x4f, 0x48, 0x4c,
	0x43, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12,
	0x3a, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x4f, 0x48, 0x4c, 0x43, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x1a, 0x45, 0x0a, 0x0a, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x4f, 0x48, 0x4c, 0x43, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x56, 0x0a, 0x04, 0x4f, 0x48, 0x4c, 0x43, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x49,
	0x73, 0x41, 0x6d, 0x6d, 0x47, 0x6f, 0x6f, 0x64, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x6d, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6d, 0x6d, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x21,
	0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x22, 0x6f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d,
	0x61, 0x78, 0x22, 0x76, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x30,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x57,
	0x68, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x12, 0x3a, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x49, 0x0a,
	0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f,
	0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a,
	0x07, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e,
	0x53, 0x69, 0x7a, 0x65, 0x4d, 0x61, 0x70, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x1a, 0x47, 0x0a, 0x09, 0x53, 0x69, 0x7a, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x61,
	0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x8a, 0x07, 0x0a,
	0x07, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x0e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x39, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x12, 0x0b, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x4d, 0x69, 0x6e,
	0x74, 0x1a, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41,
	0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x25, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x48, 0x4c, 0x43, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x20, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x48, 0x4c, 0x43, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41,
	0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x4f, 0x48, 0x4c, 0x43, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x6c,
	0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x49, 0x73, 0x41,
	0x6d, 0x6d, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x14, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x49,
	0x73, 0x41, 0x6d, 0x6d, 0x47, 0x6f, 0x6f, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x6d, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x42, 0x75, 0x79, 0x12, 0x15, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x0e, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x0e, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x20, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x19, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x57, 0x68, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x28, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x21, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x6d, 0x2e, 0x4f, 0x6e, 0x65,
	0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x42,
	0x79, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x73, 0x6f,
	0x6c, 0x6f, 0x6d, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_anomaly_proto_rawDescOnce sync.Once
	file_anomaly_proto_rawDescData = file_anomaly_proto_rawDesc
)

func file_anomaly_proto_rawDescGZIP() []byte {
	file_anomaly_proto_rawDescOnce.Do(func() {
		file_anomaly_proto_rawDescData = protoimpl.X.CompressGZIP(file_anomaly_proto_rawDescData)
	})
	return file_anomaly_proto_rawDescData
}

var file_anomaly_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_anomaly_proto_goTypes = []interface{}{
	(*SubscribeRequest)(nil),                        // 0: solom.SubscribeRequest
	(*SubscribeRequestFilterSolBalance)(nil),        // 1: solom.SubscribeRequestFilterSolBalance
	(*SubscribeRequestFilterPumpFun)(nil),           // 2: solom.SubscribeRequestFilterPumpFun
	(*SubscribeRequestFilterTransactionFilter)(nil), // 3: solom.SubscribeRequestFilterTransactionFilter
	(*SubscribeUpdate)(nil),                         // 4: solom.SubscribeUpdate
	(*SubscribeEventRequest)(nil),                   // 5: solom.SubscribeEventRequest
	(*SubscribeEventUpdate)(nil),                    // 6: solom.SubscribeEventUpdate
	(*AmmId)(nil),                                   // 7: solom.AmmId
	(*Mint)(nil),                                    // 8: solom.Mint
	(*Boolean)(nil),                                 // 9: solom.Boolean
	(*PriceAllWindow)(nil),                          // 10: solom.PriceAllWindow
	(*GetOneMinuteVolumeByWindowArgs)(nil),          // 11: solom.GetOneMinuteVolumeByWindowArgs
	(*ActionMap)(nil),                               // 12: solom.ActionMap
	(*OneMinuteVolumeByWindow)(nil),                 // 13: solom.OneMinuteVolumeByWindow
	(*GetOHLCPriceAllWindowArgs)(nil),               // 14: solom.GetOHLCPriceAllWindowArgs
	(*OHLCPriceAllWindow)(nil),                      // 15: solom.OHLCPriceAllWindow
	(*OHLC)(nil),                                    // 16: solom.OHLC
	(*IsAmmGoodArgs)(nil),                           // 17: solom.IsAmmGoodArgs
	(*GetTokenByArgs)(nil),                          // 18: solom.GetTokenByArgs
	(*TokenBy)(nil),                                 // 19: solom.TokenBy
	(*GetWhaleCountByWindowArgs)(nil),               // 20: solom.GetWhaleCountByWindowArgs
	(*CountMap)(nil),                                // 21: solom.CountMap
	(*WhaleCountByWindow)(nil),                      // 22: solom.WhaleCountByWindow
	(*GetOneMinuteTradeSizeByWindowArgs)(nil),       // 23: solom.GetOneMinuteTradeSizeByWindowArgs
	(*SizeMap)(nil),                                 // 24: solom.SizeMap
	(*OneMinuteTradeSizeByWindow)(nil),              // 25: solom.OneMinuteTradeSizeByWindow
	nil,                                             // 26: solom.PriceAllWindow.PriceEntry
	nil,                                             // 27: solom.ActionMap.VolumeEntry
	nil,                                             // 28: solom.OneMinuteVolumeByWindow.VolumeEntry
	nil,                                             // 29: solom.OHLCPriceAllWindow.PriceEntry
	nil,                                             // 30: solom.CountMap.ValueEntry
	nil,                                             // 31: solom.WhaleCountByWindow.CountEntry
	nil,                                             // 32: solom.SizeMap.ValueEntry
	nil,                                             // 33: solom.OneMinuteTradeSizeByWindow.SizeEntry
}
var file_anomaly_proto_depIdxs = []int32{
	1,  // 0: solom.SubscribeRequest.sol_balance:type_name -> solom.SubscribeRequestFilterSolBalance
	2,  // 1: solom.SubscribeRequest.pumpfun:type_name -> solom.SubscribeRequestFilterPumpFun
	3,  // 2: solom.SubscribeRequest.transaction:type_name -> solom.SubscribeRequestFilterTransactionFilter
	26, // 3: solom.PriceAllWindow.price:type_name -> solom.PriceAllWindow.PriceEntry
	27, // 4: solom.ActionMap.volume:type_name -> solom.ActionMap.VolumeEntry
	28, // 5: solom.OneMinuteVolumeByWindow.volume:type_name -> solom.OneMinuteVolumeByWindow.VolumeEntry
	29, // 6: solom.OHLCPriceAllWindow.price:type_name -> solom.OHLCPriceAllWindow.PriceEntry
	30, // 7: solom.CountMap.value:type_name -> solom.CountMap.ValueEntry
	31, // 8: solom.WhaleCountByWindow.count:type_name -> solom.WhaleCountByWindow.CountEntry
	32, // 9: solom.SizeMap.value:type_name -> solom.SizeMap.ValueEntry
	33, // 10: solom.OneMinuteTradeSizeByWindow.size:type_name -> solom.OneMinuteTradeSizeByWindow.SizeEntry
	12, // 11: solom.OneMinuteVolumeByWindow.VolumeEntry.value:type_name -> solom.ActionMap
	16, // 12: solom.OHLCPriceAllWindow.PriceEntry.value:type_name -> solom.OHLC
	21, // 13: solom.WhaleCountByWindow.CountEntry.value:type_name -> solom.CountMap
	24, // 14: solom.OneMinuteTradeSizeByWindow.SizeEntry.value:type_name -> solom.SizeMap
	0,  // 15: solom.Anomaly.Subscribe:input_type -> solom.SubscribeRequest
	5,  // 16: solom.Anomaly.SubscribeEvent:input_type -> solom.SubscribeEventRequest
	8,  // 17: solom.Anomaly.GetPriceAllWindow:input_type -> solom.Mint
	11, // 18: solom.Anomaly.GetOneMinuteVolumeByWindow:input_type -> solom.GetOneMinuteVolumeByWindowArgs
	14, // 19: solom.Anomaly.GetOHLCPriceAllWindow:input_type -> solom.GetOHLCPriceAllWindowArgs
	17, // 20: solom.Anomaly.IsAmmGood:input_type -> solom.IsAmmGoodArgs
	18, // 21: solom.Anomaly.GetMostActiveToken:input_type -> solom.GetTokenByArgs
	18, // 22: solom.Anomaly.GetTokenByTrending:input_type -> solom.GetTokenByArgs
	18, // 23: solom.Anomaly.GetTokenByBuy:input_type -> solom.GetTokenByArgs
	18, // 24: solom.Anomaly.GetTokenBySell:input_type -> solom.GetTokenByArgs
	20, // 25: solom.Anomaly.GetWhaleCountByWindow:input_type -> solom.GetWhaleCountByWindowArgs
	23, // 26: solom.Anomaly.GetOneMinuteTradeSizeByWindow:input_type -> solom.GetOneMinuteTradeSizeByWindowArgs
	4,  // 27: solom.Anomaly.Subscribe:output_type -> solom.SubscribeUpdate
	6,  // 28: solom.Anomaly.SubscribeEvent:output_type -> solom.SubscribeEventUpdate
	10, // 29: solom.Anomaly.GetPriceAllWindow:output_type -> solom.PriceAllWindow
	13, // 30: solom.Anomaly.GetOneMinuteVolumeByWindow:output_type -> solom.OneMinuteVolumeByWindow
	15, // 31: solom.Anomaly.GetOHLCPriceAllWindow:output_type -> solom.OHLCPriceAllWindow
	9,  // 32: solom.Anomaly.IsAmmGood:output_type -> solom.Boolean
	19, // 33: solom.Anomaly.GetMostActiveToken:output_type -> solom.TokenBy
	19, // 34: solom.Anomaly.GetTokenByTrending:output_type -> solom.TokenBy
	19, // 35: solom.Anomaly.GetTokenByBuy:output_type -> solom.TokenBy
	19, // 36: solom.Anomaly.GetTokenBySell:output_type -> solom.TokenBy
	22, // 37: solom.Anomaly.GetWhaleCountByWindow:output_type -> solom.WhaleCountByWindow
	25, // 38: solom.Anomaly.GetOneMinuteTradeSizeByWindow:output_type -> solom.OneMinuteTradeSizeByWindow
	27, // [27:39] is the sub-list for method output_type
	15, // [15:27] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_anomaly_proto_init() }
func file_anomaly_proto_init() {
	if File_anomaly_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_anomaly_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterSolBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterPumpFun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterTransactionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEventUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmmId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceAllWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneMinuteVolumeByWindowArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneMinuteVolumeByWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOHLCPriceAllWindowArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OHLCPriceAllWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OHLC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAmmGoodArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenByArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWhaleCountByWindowArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhaleCountByWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneMinuteTradeSizeByWindowArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SizeMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_anomaly_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneMinuteTradeSizeByWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_anomaly_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_anomaly_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_anomaly_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_anomaly_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_anomaly_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_anomaly_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_anomaly_proto_goTypes,
		DependencyIndexes: file_anomaly_proto_depIdxs,
		MessageInfos:      file_anomaly_proto_msgTypes,
	}.Build()
	File_anomaly_proto = out.File
	file_anomaly_proto_rawDesc = nil
	file_anomaly_proto_goTypes = nil
	file_anomaly_proto_depIdxs = nil
}
